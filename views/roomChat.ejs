<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title><%= title %> - <%- partner.displayName %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css">
  <link rel="stylesheet" href="./style.css">
  <meta name="theme-color" content="#6a74f0">
  <link rel="stylesheet" href="../tailwindcss/compile.css">
</head>
<body id="body">

  <div class="head">
    <div class="ui big wasu list">
      <div class="item item-icon">
        <button class="icon">
          <i class="arrow left icon"></i>
        </button>
      </div>
      <div class="item user">
        <img class="ui avatar image" src="<%- process.env.WEBURL %>/attachment/avatar/<%- partner.id %>">
        <div class="content">
          <h3 class="header"><%- partner.displayName %></h3>
          <div class="description status-user status-<%- partner._id %>">
          </div>
        </div>
      </div>
    </div>
  </div>

  <br><br><br><br>
  <div class="body">
    <div class="message-list">
      <div id="item-chat" class="item-chat">
        <div class="header-message-by-system">
          <div class="message-by-system">
            Pesan di simpan secara pribadi, jadi cuma kamu dan <b><%- partner.displayName %></b> yang bisa melihat pesan di sini.
          </div>
        </div>
        <% allChat.map((x, i) => {
          %>
          <% if (x.author == req.user.id) {
            %>
            <div x-data="dropdown()" ondblclick="doubleClick('<%- i %>')" class="parent-you">
              <div x-spread="trigger" class="you">
                <p>
                  <%- x.message %>
                </p>
                <span class="date">
                  <%
                  let month = ["December",
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November"];
                  let messageMonth = month[x.createdAt.getMonth()];
                  let hours = ("0" + x.createdAt.getHours()).slice(-2);
                  let minutes = ("0" + x.createdAt.getMinutes()).slice(-2);
                  let day = ("0" + x.createdAt.getDay()).slice(-2);
                  %>
                  <%- day %> <%- messageMonth %> <%- hours %>:<%- minutes %>
                </span>
              </div>
              <div class="dropdown-list mr-4 border-none transition bg-gray-700 rounded-md" id="color-menu" x-spread="dropdown" x-position="left-start" x-cloak>
                <a href="#" class="dropdown-item text-gray-200">Edit</a>
                <a href="#" class="dropdown-item text-gray-200">Reply</a>
                <a href="#" class="dropdown-item text-gray-200">Delete</a>
              </div>
            </div>
            <%
          } else {
            %>
            <div ondblclick="doubleClick('<%- i %>')" id="<%- i %>" class="parent-friends">
              <div class="friends">
                <p>
                  <%- x.message %>
                </p>
                <span class="date">
                  <%
                  let month = ["December",
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November"];
                  let messageMonth = month[x.createdAt.getMonth()];
                  let hours = ("0" + x.createdAt.getHours()).slice(-2);
                  let minutes = ("0" + x.createdAt.getMinutes()).slice(-2);
                  let day = ("0" + x.createdAt.getDay()).slice(-2);
                  %>
                  <%- day %> <%- messageMonth %> <%- hours %>:<%- minutes %>
                </span>
              </div>
            </div>
            <%
          } %>
          <%
        }) %>
      </div>
    </div>

    <form id="sendMessageForm" method="POST">
      <div class="box-send-message">
        <div class="ui chat-input input">
          <input class="message-send" type="text" placeholder="Send message">
        </div>
        <button type="submit">
          <i class="sendIcon telegram plane icon"></i>
        </button>
      </div>
    </form>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/kutty@latest/dist/kutty.min.js"></script>
  <script type="text/javascript">

    /*function doubleClick(id) {
      return alert("double click");
    }*/


    setTimeout(() => {
      window.scrollTo({
        top: document.querySelector("body").scrollHeight,
        left: 0,
        behavior: 'smooth'
      });
    },
      500);

    window.onload = function() {


      const socket = io({
        query: {
          partner: "<%- req.params.id %>",
          me: "<%- req.user.id %>"
        }
      });
      // form
      let form = document.getElementById("sendMessageForm");
      let input = document.querySelector(".message-send");
      //console.log(input === document.activeElement)
      input.addEventListener("focus",
        function(e) {
          input.style.position = "relative";
        });
      let buttonIcon = document.querySelector(".icon");
      buttonIcon.addEventListener("click",
        function() {
          return window.location.href = "/me";
        });
      let userElement = document.querySelector(".user");
      userElement.addEventListener("click",
        function() {});

      form.addEventListener("submit",
        function(e) {
          e.preventDefault();
          if (!input.value) {
            console.info("Pesan tidak boleh kosong")
            return;
          }
          socket.emit("chat", {
            from: "<%- req.user.id %>",
            to: "<%- req.params.id %>",
            message: input.value
          });
          input.value = "";
          input.blur();
        });

      socket.on("chat-message",
        m => {
          let parent = document.querySelector(".item-chat");

          if (m.from === "<%- req.user.id %>") {
            window.scrollTo({
              top: document.querySelector("body").scrollHeight,
              left: 0,
              behavior: 'smooth'
            });
            const audio = new Audio('http://localhost:3000/sound/me.mp3');
            audio.play();

            let month = ["December",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November"];
            let x = new Date();
            let messageMonth = month[x.getMonth()];
            let hours = ("0" + x.getHours()).slice(-2);
            let minutes = ("0" + x.getMinutes()).slice(-2);
            let day = ("0" + x.getDay()).slice(-2);

            parent.innerHTML += `<div class="parent-you">
            <div class="you">
            <p>
            ${m.message}
            </p>
            <span class="date">
            ${day} ${messageMonth} ${hours}:${minutes}
            </span>
            </div>
            </div>`;
          } else {
            const audio = new Audio('http://localhost:3000/sound/partner.mp3');
            audio.play();
            let month = ["December",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November"];
            let x = new Date();
            let messageMonth = month[x.getMonth()];
            let hours = ("0" + x.getHours()).slice(-2);
            let minutes = ("0" + x.getMinutes()).slice(-2);
            let day = ("0" + x.getDay()).slice(-2);

            parent.innerHTML += `<div class="parent-friends">
            <div class="friends">
            <p>
            ${m.message}
            </p>
            <span class="date">
            ${day} ${messageMonth} ${hours}:${minutes}
            </span>
            </div>
            </div>`;
          }
        });

      socket.on("list-user-connect",
        user => {
          user.map(x => {
            if (x.id === "<%- req.params.id %>") {
              let statusText = document.querySelector(`.status-${x._id}`)
              statusText.classList.add("animated-status")
              setTimeout(() => {
                statusText.innerHTML = "Online";
                statusText.classList.remove("animated-status");
              }, 1000);
            }
          })
        });
      socket.on("user-disconnect", user => {
        if (user.id === "<%- req.params.id %>") {
          let timeDate = Number(`${user.last_online}`);
          let time = new Date(timeDate);
          let hours = ("0" + time.getHours()).slice(-2);
          let minutes = ("0" + time.getMinutes()).slice(-2);
          let day = ("0" + time.getDay()).slice(-2);
          let month = ("0" + time.getMonth()).slice(-2);

          let status = document.querySelector(`.status-${user._id}`);
          status.classList.add("animated-status");
          setTimeout(() => {
            status.innerHTML = `${day}/${month}/${time.getFullYear()} ${hours}:${minutes}`;
            status.classList.remove("animated-status");
          }, 1000);
        }
      });

      // if partner online convert from Date.now() to Hours:minutes
      let timeDate = Number("<%- partner.last_online %>");
      let time = new Date(timeDate);
      let hours = ("0" + time.getHours()).slice(-2);
      let minutes = ("0" + time.getMinutes()).slice(-2);
      let day = ("0" + time.getDay()).slice(-2);
      let month = ("0" + time.getMonth()).slice(-2);
      document.querySelector(`.status-<%- partner._id %>`).innerHTML = `${day}/${month}/${time.getFullYear()} ${hours}:${minutes}`;
    };
  </script>
  <script src="//cdn.jsdelivr.net/npm/eruda"></script>
  <script>
    eruda.init();
  </script>
</body>
</html>