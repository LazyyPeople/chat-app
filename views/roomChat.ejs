<!DOCTYPE html>
<html>
<head>
  <title><%= title %> - <%- partner.displayName %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css">
  <link rel="stylesheet" href="./style.css">
</head>
<body>

  <div class="head">
    <div class="ui big list">
      <div class="item">
        <img class="ui avatar image" src="https://media.discordapp.net/avatars/834102697477013534/d8af5938eb1ebf31017f25dac10d38df.png">
        <div class="content">
          <h3 class="header"><%- partner.displayName %></h3>
          <div class="description status-<%- partner._id %>">
            Last online <%- partner.last_online %>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="body">

    <div class="message-list">
      <div class="item-chat">
        <% allChat.map(x => { %>
          <% if(x.author == req.user.email) { %>
            <div class="parent-you">
              <div class="you">
                <p>
                  <%- x.message %>
                </p>
              </div>
            </div>
          <% } else { %>
            <div class="parent-friends">
              <div class="friends">
                <p>
                  <%- x.message %>
                </p>
              </div>
            </div>
          <% } %>
        <% }) %>
      </div>
    </div>

    <form id="sendMessageForm" method="POST">
      <div class="box-send-message">
        <div class="ui chat-input input">
          <input class="message-send" type="text" placeholder="Send message">
        </div>
        <button type="submit">
          <i class="sendIcon telegram plane icon"></i>
        </button>
      </div>
    </form>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
  <script type="text/javascript">
    window.onload = () => {
      const socket = io({
        query: {
          partner: "<%- req.params.email %>",
          me: "<%- req.user.email %>"
        }
      });
      // form
      let form = document.getElementById("sendMessageForm");
      let input = document.querySelector(".message-send");
      form.addEventListener("submit", function(e) {
        e.preventDefault();
        if (!input.value) {
          console.info("Pesan tidak boleh kosong")
          return;
        }
        socket.emit("chat", {
          from: "<%- req.user.email %>",
          to: "<%- req.params.email %>",
          message: input.value
        });
        const audio = new Audio('http://localhost:3000/sound/me.mp3');
        audio.play();
        input.value = "";
      });

      socket.on("chat-message",
        m => {
          let parent = document.querySelector(".item-chat");
          if (m.from === "<%- req.user.email %>") {
            parent.innerHTML += `<div class="parent-you">
            <div class="you">
            <p>
            ${m.message}
            </p>
            </div>
            </div>`;
          } else {
            const audio = new Audio('http://localhost:3000/sound/partner.mp3');
            audio.play();
            parent.innerHTML += `<div class="parent-friends">
            <div class="friends">
            <p>
            ${m.message}
            </p>
            </div>
            </div>`;
          }
        });

      socket.on("list-user-connect",
        user => {
          user.map(x => {
            if (x.email === "<%- req.params.email %>") {
              document.querySelector(`.status-${x._id}`).innerHTML = "Online";
            }
          })
        });
      socket.on("user-disconnect", user => {
        if (user.email === "<%- req.params.email %>") {
          let timeDate = Number(`${user.last_online}`);
          let time = new Date(timeDate);
          let hours = ("0" + time.getHours()).slice(-2);
          let minutes = ("0" + time.getMinutes()).slice(-2);
          return document.querySelector(`.status-${user._id}`).innerHTML = `Last Online ${hours}:${minutes}`;
        }
      });

      // if partner online convert from Date.now() to Hours:minutes
      let timeDate = Number("<%- partner.last_online %>");
      let time = new Date(timeDate);
      let hours = ("0" + time.getHours()).slice(-2);
      let minutes = ("0" + time.getMinutes()).slice(-2);
      document.querySelector(`.status-<%- partner._id %>`).innerHTML = `Last Online ${hours}:${minutes}`;
    };
  </script>
  <script src="//cdn.jsdelivr.net/npm/eruda"></script>
  <script>
    eruda.init();
  </script>
</body>
</html>